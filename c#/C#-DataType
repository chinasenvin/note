数据类型详解

                                / 整型:byte short int long
                   /  数值类型  |
                  |             \ 浮点型:float double
         / 值类型 |
         |        |  字符类型char
         |        |  布尔类型bool
         |        |  枚举类型enum
         |        \ 结构体类型struct
数据类型 |
         \ 引用类型:   类(class)    数组([])    接口(interface)委托
      
      
值类型和引用类型区别:
    值类型相对引用类型来说长度更加确定(直观)
    值类型和引用类型在内存中的存储方式不同
        值类型存和取直接通过栈完成
        引用类型先把数据存放在堆中再把地址存放在栈中
        使用时先通过名称找到栈中地址再根据地址进入到堆中操作数据
    值类型存取速度比引用类型快
        值类型和引用类型复制时操作不同
            值类型的复制，复制的是值的副本，复制的数据修改不影响原来的数据
            引用类型的复制，复制的是值的地址，两块数据用的是同一个地址
            复制的数据如果修改，原来的数据跟着一起修改
                
    string:
        string是一个类，但是string的所有操作全部按照值类型操作
        String string区别:没有区别
        ==和equals区别:没有区别都是比较的内容值
    ref:
        强制值类型传参的时候也传递地址
        
枚举类型(enum):
    把所有可能的值全部罗列出来，数据的选项/值是固定
    语法:
        enum名 称
        {
            值1,值2,值3
        }
    固化数据可能的值
    
结构体类型(struct)
    结构体是类的前身 字段 属性 方法
    struct名称
    {
        字段
        属性
        方法
    }
    和类区别:
            类是引用类型结构体是值类型
            结构体在使用时可以不用new也可以new操作
    现在一般不学使用，大多数使用在:
        坐标
        颜色
        
值类型和引用类型互转:
    值类型 --> 引用类型    自动转换  装箱
    引用类型 --> 值类型    强制转换  拆箱   
