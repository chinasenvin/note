万物皆对象：对象就是程序模拟现实世界的一个东西
    对象:
        静态特征:对象身上的信息 -->变量-->属性
        动态特征:对象可以做的事情 -->方法
    对象=属性+方法
    
    类:一类/类别/种类
        把一类属性和方法相似的对象聚在一起形成一类
        抽象而来
    类是对象的抽象对象是类的实例化
    类=属性+方法
    
语法:
    创建类:
        class类名
        {
          //字段 省略了
          //属性
          //方法
          //构造方法
         }
         
创建对象:
    类名  对象 = new 类名();
         对象.属性
         对象.方法()
思路:
    需求 --> 需求中涉及到哪些类 --> 类中有哪些属性+方法
    
属性:
    封装过后的字段叫属性(加入了get方法set方法)
初始化问题:
    A:通过.运算符进行赋值
        类名对象=new类名()
        对象.属性1=值1
        对象.属性2=值2
        对象.属性3=值3
    B:通过对象初始化器
        类名 对象 = new 类名() {属性=值, 属性=值, 属性=值}
    c:借助构造函数(方法)
        特点:没有返回值void都不写
             方法名和类名一致
             不能对象调用只能new操作的时候自动调用
        作用:
            利用构造函数进行初始化操作
        注意:
            A:程序会给没有构造函数的类添加一个默认的无参构造
            B:写构造的时候建议无参带参都写上
            C:在构造函数中只放初始化代码
          this:
            这个类
